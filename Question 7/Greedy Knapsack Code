#include <stdio.h>
#include <stdlib.h>
struct Item {
    int weight;
    int value;
};
int compare(const void *a, const void *b) {
    struct Item *item1 = (struct Item *)a;
    struct Item *item2 = (struct Item *)b;
    double r1 = (double)item1->value / item1->weight;
    double r2 = (double)item2->value / item2->weight;
    return r2 > r1 ? 1 : -1;
}
double fractionalKnapsack(int W, struct Item arr[], int n) {
    qsort(arr, n, sizeof(arr[0]), compare);
    int currWeight = 0;
    double finalValue = 0.0;
    for (int i = 0; i < n; i++) {
        if (currWeight + arr[i].weight <= W) {
            currWeight += arr[i].weight;
            finalValue += arr[i].value;
        } else {
            int remain = W - currWeight;
            finalValue += arr[i].value * ((double)remain / arr[i].weight);
            break;
        }
    }
    return finalValue;
}
int main() {
    int W = 50;
    struct Item arr[] = {{10, 60}, {20, 100}, {30, 120}};
    int n = sizeof(arr) / sizeof(arr[0]);
    printf("Maximum value in Fractional Knapsack = %.2f\n", fractionalKnapsack(W, arr, n));
    return 0;
}
